{
  "swagger": "2.0",
  "info": {
    "description": "API documentation for the backend service",
    "version": "1.0.0",
    "title": "Papel Backend"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "event",
      "description": "Event fetch endpoints"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/auth/sign-up": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Sign up endpoint for the Papel.",
        "consumes": [
          "application/json"
          ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "user",
            "description": "The user to sign up.",
            "schema": {
              "type": "object",
              "required": [
                "name",
                "surname",
                "email",
                "password"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the user.",
                  "example": "John"
                },
                "surname": {
                  "type": "string",
                  "description": "Surname of the user.",
                  "example": "Doe"
                },
                "email": {
                  "type": "string",
                  "description": "Email of the user.",
                  "example": "johndoe@gmail.com"
                },
                "password": {
                  "type": "string",
                  "description": "Password of the user.",
                  "example": "strongPa$.$word"
                },
                "idNumber": {
                  "type": "string",
                  "description": "ID number of the user.",
                  "example": "12345678910"
                },
                "iban": {
                  "type": "string",
                  "description": "IBAN number of the user.",
                  "example": "TR33 0006 1005 1978 6457 8413 26"
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "description": "Latitude of the location.",
                      "example": 41.085987
                    },
                    "longitude": {
                      "type": "number",
                      "description": "Longitude of the location.",
                      "example": 29.044008
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successfully signed up. A verification email is sent."
          },
          "400": {
            "description": "Validation error occurred for one of the parameters. Check the name and message fields for diagnostics."
          },
          "500": {
            "description": "Internal error occurred. Check the cause field for the diagnostics."
          }
        }
      }
    },
    "/auth/sign-up/verification/{token}": {
      "get": {
        "tags": [
          "auth"
        ],
        "summary": "Email verification endpoint.",
        "produces": [
          "application/text",
          "application/json"
        ],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "Verification token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK. User successfully validated."
          },
          "400": {
            "description": "Validation error occurred for one of the parameters. Check the name and message fields for diagnostics."
          },
          "500": {
            "description": "Internal error occurred. Check the cause field for the diagnostics."
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Login endpoint.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "credentials",
            "description": "The user credentials to login.",
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "description": "Email of the user.",
                  "example": "johndoe@gmail.com"
                },
                "password": {
                  "type": "string",
                  "description": "Password of the user.",
                  "example": "strongPa$.$word"
                }
              }
            }
          }
        ],
        "responses": {
          "200":{
            "description": "OK. User successfully logged in. User object and JWT token is returned."
          },
          "401": {
            "description": "Invalid credentials. Either the user with the given email does not exists or the password does not matches the password for the given email."
          },
          "500": {
            "description": "Internal error occurred. Check the cause field for the diagnostics."
          }
        }
      }
    },"/event": {
      "get": {
        "tags": [
          "event" ],
          "summary": "Event get all endpoint.",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
  
          "responses": {
            "200":{
              "description": "OK. All Events returned succesfully.",
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties":  {
                    "title":{
                      "type": "string",
                      "description": "Title of the event",
                      "example": "title"
                    },
                    "body":{
                      "type": "string",
                      "description": "Event body",
                      "example": "272.7 example"
                    },
                    "comment":{
                      "type": "array",
                      "description": "Comments of the event",
                      "example": ["comment2","comment2"]
                    },
                    "date":{
                      "type": "date",
                      "description": "Start day of the event"
                    },
                    "rank":{
                      "type": "number",
                      "description": "Rank of the event",
                      "example": 3
                    },
                    "country":{
                      "type": "string",
                      "description": "Country of the event",
                      "example": "Turkey"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/event/{_id}": {
        "get": {
          "tags": [
            "event"
          ],
          "summary": "Returns requested event with historical data",
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "parameters": [
            {
              "name": "_id",
              "in": "path",
              "description": "Unique event ID",
              "required": true,
              "type": "string"
            }
          ],
  
          "responses": {
            "200":{
              "description": "OK. Event returned succesfully.",
              "schema": {
                "type": "object",
                "properties":  {
                  "title":{
                    "type": "string",
                    "description": "Title of the event",
                    "example": "title"
                  },
                  "body":{
                    "type": "string",
                    "description": "Event body",
                    "example": "272.7 example"
                  },
                  "comment":{
                    "type": "array",
                    "description": "Comments of the event",
                    "example": ["comment2","comment2"]
                  },
                  "date":{
                    "type": "date",
                    "description": "Start day of the event"
                  },
                  "rank":{
                    "type": "number",
                    "description": "Rank of the event",
                    "example": 3
                  },
                  "country":{
                    "type": "string",
                    "description": "Country of the event",
                    "example": "Turkey"
                  }
                }
  
              }
            }
          }
        }
      }
    }
  }